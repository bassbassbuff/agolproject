version: '3'

volumes:
  agol_local_postgres_data: {}
  agol_local_postgres_data_backups: {}

services:
  agolapi:
    build:
      context: ./api
      dockerfile: ./compose/local/django/Dockerfile
    image: agol_local_django
    container_name: agol_local_django
    platform: linux/x86_64
    # depends_on:
    #   - postgres
    volumes:
      - ./api:/app:z
    env_file:
      - ./api/.envs/.local/.django
      - ./api/.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start-local

  postgres:
    build:
      context: ./api
      dockerfile: ./compose/local/postgres/Dockerfile
    image: agol_local_postgres
    container_name: agol_local_postgres
    volumes:
      - agol_local_postgres_data:/var/lib/postgresql/data:Z
      - agol_local_postgres_data_backups:/backups:z
    env_file:
      - ./api/.envs/.local/.postgres

  docs:
    image: agol_local_docs
    container_name: agol_local_docs
    platform: linux/x86_64
    build:
      context: ./api
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./api/.envs/.local/.django
    volumes:
      - ./api/docs:/docs:z
      - ./api/config:/app/config:z
      - ./api/agol:/app/agol:z
    ports:
      - "9000:9000"
    command: /start-docs

  # ops_front:
  #   container_name: ops_front
  #   restart: always
  #   build:  
  #     context: ./ops_front
  #     dockerfile: Dockerfile
  #   image: ops_front_image
  #   depends_on:
  #     - agolapi
  #   volumes:
  #     - ./ops_front/nginx:/etc/nginx/conf.d
  #   ports:
  #     - 81:80

  ops_front:
    container_name: ops_front_local
    restart: always
    build:  
      context: ./ops_front
      dockerfile: Dockerfile
    image: ops_front_image
    # volumes:
    #   - ./ops_front/nginx:/etc/nginx/conf.d
    # environment:
      # - API=http://agolapi:8080
      # - PORT=8080
    # depends_on:
    #   - agolapi
    volumes:
      # - ./ops_front/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ops_front/dist:/ops/build
    ports:
      - "81:80"