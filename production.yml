version: '3'

# volumes:
#   production_postgres_data: {}
#   production_postgres_data_backups: {}
#   production_traefik: {}

services:
  agolapi:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    image: gechcode/agolapi
    platform: linux/x86_64
    # depends_on:
    #   # - postgres
    #   # - redis
    env_file:
      - ./api/.envs/.production/.django
    command: /start
    environment:
    #   # - API=http://agolapi:8080
      - PORT=8080

  ops_front:
    container_name: ops_front
    restart: always
    build:  
      context: ./ops_front
      dockerfile: Dockerfile
    image: ops_front_image
    environment:
      # - API=http://agolapi:8080
      - PORT=8080
    # depends_on:
    #   - django
    # volumes:
    #   - ./ops_front/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    #   # - ./dist:/ops/build
    ports:
      - "8080:80"

  # postgres:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/postgres/Dockerfile
  #   image: agol_production_postgres
  #   volumes:
  #     - production_postgres_data:/var/lib/postgresql/data:Z
  #     - production_postgres_data_backups:/backups:z
  #   env_file:
  #     - ./.envs/.production/.postgres    

  # traefik:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   image: agol_production_traefik
  #   depends_on:
  #     - django
  #   volumes:
  #     - production_traefik:/etc/traefik/acme:z
  #   ports:
  #     - "0.0.0.0:80:80"
  #     - "0.0.0.0:443:443"

  # redis:
  #   image: redis:6  



  # awscli:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/aws/Dockerfile
  #   env_file:
  #     - ./.envs/.production/.django
  #   volumes:
  #     - production_postgres_data_backups:/backups:z